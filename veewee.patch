--- ruby-vnc-1.1.0/lib/net/vnc.rb~	2013-05-13 16:39:11.000000000 +0300
+++ veewee-0.3.7/lib/net/vnc.rb	2013-01-10 12:02:14.000000000 +0200
@@ -55,23 +55,25 @@
 			end
 		end
 
-		BASE_PORT = 5900
-		CHALLENGE_SIZE = 16
+		BASE_PORT = 5900 if BASE_PORT.nil?
+		CHALLENGE_SIZE = 16 if CHALLENGE_SIZE.nil?
 		DEFAULT_OPTIONS = {
 			:shared => false,
 			:wait => 0.1
-		}
+		} if DEFAULT_OPTIONS.nil?
 
+	if KEY_MAP.nil?
 		keys_file = File.dirname(__FILE__) + '/../../data/keys.yaml'
 		KEY_MAP = YAML.load_file(keys_file).inject({}) { |h, (k, v)| h.update k.to_sym => v }
 		def KEY_MAP.[] key
 			super or raise ArgumentError.new('Invalid key name - %s' % key)
 		end
+	end
 
 		attr_reader :server, :display, :options, :socket, :pointer
 
 		def initialize display=':0', options={}
-			@server = 'localhost'
+			@server = '127.0.0.1'
 			if display =~ /^(.*)(:\d+)$/
 				@server, display = $1, $2
 			end
@@ -158,6 +160,39 @@
 			wait options
 		end
 
+    SHIFTED_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ~!@#$%^&*()_+{}|:"<>?'
+    KEY_PRESS_CHARS = {
+      "\n" => :return,
+      "\t" => :tab
+    }
+
+    # This types +text+ on the server, but it holds the shift key down when necessary.
+    # It will also execute key_press for tabs and returns.
+    def type_string text, options={}
+      shift_key_down = nil
+
+      text.each_char do |char|
+        key_to_press = KEY_PRESS_CHARS[char]
+        unless key_to_press.nil?
+          key_press key_to_press
+        else
+          key_needs_shift = SHIFTED_CHARS.include? char
+
+          if shift_key_down.nil? || shift_key_down != key_needs_shift
+            if key_needs_shift
+              key_down :shift
+            else
+              key_up :shift
+            end
+          end
+
+          type char
+          shift_key_down = key_needs_shift
+        end
+      end
+      wait options
+    end
+
 		# this takes an array of keys, and successively holds each down then lifts them up in
 		# reverse order.
 		# FIXME: should wait. can't recurse in that case.
@@ -217,7 +252,7 @@
 
 		BUTTON_MAP = {
 			:left => 0
-		}
+		} if BUTTON_MAP.nil?
 
 		def button_press button=:left, options={}
 			begin
